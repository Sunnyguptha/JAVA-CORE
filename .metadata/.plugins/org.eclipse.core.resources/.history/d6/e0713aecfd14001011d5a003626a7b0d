package com.comparableAndcomparator.java;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

public class Ex02 {

	public static void main(String[] args) {
		
		Student[] students= {
				
				new Student(101, "hyderabad", 300),
				new Student(105,"warangle", 500),
				new Student(103, "hanamkonda", 400),
				new Student(102,"kazipet", 700),
				new Student(104,"uppal", 800)
		};
		
	System.out.println(Arrays.toString(students));
	
	     System.out.println
	
	     List<Student> studentsList = new ArrayList<>(Arrays.asList(students));
	        Collections.sort(studentsList); // This now works because Comparable is implemented

	        //System.out.println("After Sorting by rollNo (default):");
	        System.out.println(studentsList);
	
	}

}


 class Student implements Comparable<Student>{
	int rollNo;
	String name;
	int marks;
	
	public Student(int rollNo,String name,int marks){
		this.rollNo=rollNo;
		this.name=name;
		this.marks=marks;
	}
	
	public String toString() {
		return "Student {"+"rollNo="+rollNo+",name="+ name +",marks="+marks+"}"+"\n";
	}

	@Override
	public int compareTo(Student anotherStudent) {
		
		/* 				logic
		(x < y) → return -1  → x comes **before** y  
				(x == y) → return 0  → x and y are considered **equal**  
				(x > y) → return 1   → x comes **after** y

		Is 3 < 1? → No → move 1 before 3

		Is 1 < 2? → Yes → keep order

		Is 3 > 2? → Yes → move 2 before 3
		
		*/
		
//	       x y x x	  no-sort  no-sort x<1 sort    
		// 2 4 3 3===>(x<y)?-1:((x==y)?0;1)
		
		int x=this.rollNo;
		int y=anotherStudent.rollNo;
		
		//int x=this.marks;
		//int y=anotherStudent.marks;
		//return (x<y)?-1:((x==y)?0:1);
		
		/*
		if(x<y)
			return -2;
		else if(x>y)
			return 2;
		else
			return 0;
		*/
		
		return Integer.compare(x,y);
		
	}
	
}